version: 2.1

parameters:
  workflow:
    description: Which workflow to run
    type: enum
    enum: ['normal', 'merged', 'daily', 'skipped', 'docs']
    default: 'skipped'

executors:
  sb_node_16_classic:
    parameters:
      class:
        description: The Resource class
        type: enum
        enum: ['small', 'medium', 'medium+', 'large', 'xlarge']
        default: 'small'
    working_directory: /tmp/storybook
    docker:
      - image: cimg/node:18.18.0
        environment:
          NODE_OPTIONS: --max_old_space_size=6144
    resource_class: <<parameters.class>>
  sb_node_16_browsers:
    parameters:
      class:
        description: The Resource class
        type: enum
        enum: ['small', 'medium', 'medium+', 'large', 'xlarge']
        default: 'small'
    working_directory: /tmp/storybook
    docker:
      - image: cimg/node:18.18.0-browsers
        environment:
          NODE_OPTIONS: --max_old_space_size=6144
    resource_class: <<parameters.class>>
  sb_playwright:
    parameters:
      class:
        description: The Resource class
        type: enum
        enum: ['small', 'medium', 'medium+', 'large', 'xlarge']
        default: 'small'
    working_directory: /tmp/storybook
    docker:
      - image: mcr.microsoft.com/playwright:v1.36.0-focal
        environment:
          NODE_OPTIONS: --max_old_space_size=6144
    resource_class: <<parameters.class>>

orbs:
  git-shallow-clone: guitarrapc/git-shallow-clone@2.5.0
  browser-tools: circleci/browser-tools@1.4.1
  discord: antonioned/discord@0.1.0
  codecov: codecov/codecov@3.2.4

commands:
  cancel-workflow-on-failure:
    description: 'Cancels the entire workflow in case the previous step has failed'
    steps:
      - run:
          name: Cancel current workflow
          when: on_fail
          command: |
            echo "Canceling workflow as previous step resulted in failure."
            echo "To execute all checks locally, please run yarn ci-tests"
            curl -X POST --header "Content-Type: application/json" "https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/cancel?circle-token=${WORKFLOW_CANCELER}"
  report-workflow-on-failure:
    description: 'Reports failures to discord'
    parameters:
      template:
        description: |
          Which template to report in discord. Applicable for parallel sandbox jobs
        type: string
        default: 'none'
    steps:
      - run:
          when: on_fail
          command: git fetch --unshallow
      - discord/status:
          only_for_branches: main,next,next-release,latest-release
          fail_only: true
          failure_message: $(yarn get-report-message << pipeline.parameters.workflow >> << parameters.template >>)
jobs:
  pretty-docs:
    executor:
      class: medium
      name: sb_node_16_classic
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --verbose'
      - restore_cache:
          name: Restore Yarn cache
          keys:
            - prettydocs-yarn-2-cache-v7--{{ checksum "code/yarn.lock" }}--{{ checksum "scripts/yarn.lock" }}
      - run:
          name: Install
          command: |
            cd scripts
            yarn install
      - save_cache:
          name: Save Yarn cache
          key: prettydocs-yarn-2-cache-v7--{{ checksum "code/yarn.lock" }}--{{ checksum "scripts/yarn.lock" }}
          paths:
            - ~/.yarn/berry/cache
      - run:
          name: Prettier
          command: |
            cd scripts
            yarn docs:prettier:check
  build:
    executor:
      class: large
      name: sb_node_16_classic
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --verbose'
      - restore_cache:
          name: Restore Yarn cache
          keys:
            - build-yarn-2-cache-v4--{{ checksum "code/yarn.lock" }}--{{ checksum "scripts/yarn.lock" }}
      - run:
          name: Compile
          command: |
            yarn task --task compile --start-from=auto --no-link --debug
            git diff --exit-code
      - run:
          name: Publish to Verdaccio
          command: |
            cd code
            yarn local-registry --publish
      - report-workflow-on-failure
      - save_cache:
          name: Save Yarn cache
          key: build-yarn-2-cache-v4--{{ checksum "code/yarn.lock" }}--{{ checksum "scripts/yarn.lock" }}
          paths:
            - ~/.yarn/berry/cache
      - persist_to_workspace:
          root: .
          paths:
            - code/node_modules
            - scripts/node_modules
            - code/examples
            - code/node_modules
            - code/addons
            - code/frameworks
            - code/deprecated
            - code/lib
            - code/builders
            - code/ui
            - code/renderers
            - code/presets
            - .verdaccio-cache
  lint:
    executor:
      class: large
      name: sb_node_16_classic
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --verbose'
      - attach_workspace:
          at: .
      - run:
          name: Lint
          command: |
            cd code
            yarn lint
      - report-workflow-on-failure
      - cancel-workflow-on-failure
  check:
    executor:
      class: xlarge
      name: sb_node_16_classic
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --verbose'
      - attach_workspace:
          at: .
      - run:
          name: Check
          command: |
            yarn task --task check --start-from=auto --no-link --debug
            git diff --exit-code
      - report-workflow-on-failure
      - cancel-workflow-on-failure
  script-checks:
    executor: sb_node_16_browsers
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --verbose'
      - attach_workspace:
          at: .
      - run:
          name: Check parallelism count
          command: |
            cd scripts
            yarn get-template --check
      - run:
          name: Type check
          command: |
            cd scripts
            yarn check
      - run:
          name: Run tests
          command: |
            cd scripts
            yarn test --coverage --ci
      - store_test_results:
          path: scripts/junit.xml
      - report-workflow-on-failure
      - cancel-workflow-on-failure
  unit-tests:
    executor:
      class: xlarge
      name: sb_node_16_browsers
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --verbose'
      - attach_workspace:
          at: .
      - run:
          name: Test
          command: |
            cd code
            yarn test --coverage --ci --maxWorkers=6
      - store_test_results:
          path: code/junit.xml
      - persist_to_workspace:
          root: .
          paths:
            - code/coverage
      - report-workflow-on-failure
      - cancel-workflow-on-failure
  coverage:
    executor:
      class: small
      name: sb_node_16_browsers
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --verbose'
      - attach_workspace:
          at: .
      - codecov/upload
      - report-workflow-on-failure
  chromatic-internal-storybooks:
    executor:
      class: medium+
      name: sb_node_16_browsers
    environment:
      NODE_OPTIONS: --max_old_space_size=6144
    steps:
      # switched this to the CircleCI helper to get the full git history for TurboSnap
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Running Chromatic
          command: |
            cd code
            yarn storybook:ui:chromatic
            yarn storybook:blocks:chromatic
      - report-workflow-on-failure
      - store_test_results:
          path: test-results
  ## new workflow
  create-sandboxes:
    parameters:
      parallelism:
        type: integer
    executor:
      class: medium
      name: sb_node_16_browsers
    parallelism: << parameters.parallelism >>
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --verbose'
      - attach_workspace:
          at: .
      - run:
          name: Creating Sandboxes
          command: yarn task --task sandbox --template $(yarn get-template --cadence << pipeline.parameters.workflow >> --task sandbox) --no-link --start-from=never --junit
      - report-workflow-on-failure:
          template: $(yarn get-template --cadence << pipeline.parameters.workflow >> --task sandbox)
      - persist_to_workspace:
          root: .
          paths:
            - sandbox
      - store_test_results:
          path: test-results
  smoke-test-sandboxes:
    parameters:
      parallelism:
        type: integer
    executor:
      class: medium
      name: sb_node_16_browsers
    parallelism: << parameters.parallelism >>
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --verbose'
      - attach_workspace:
          at: .
      - run:
          name: Smoke Testing Sandboxes
          command: yarn task --task smoke-test --template $(yarn get-template --cadence << pipeline.parameters.workflow >> --task smoke-test) --no-link --start-from=never --junit
      - report-workflow-on-failure:
          template: $(yarn get-template --cadence << pipeline.parameters.workflow >> --task smoke-test)
      - store_test_results:
          path: test-results
  build-sandboxes:
    parameters:
      parallelism:
        type: integer
    executor:
      class: large
      name: sb_node_16_browsers
    parallelism: << parameters.parallelism >>
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --verbose'
      - attach_workspace:
          at: .
      - run:
          name: Starting Event Collector
          command: node --loader esbuild-register/loader -r esbuild-register ./event-log-collector.ts
          working_directory: scripts
          background: true
      - run:
          name: Building Sandboxes
          command: yarn task --task build --template $(yarn get-template --cadence << pipeline.parameters.workflow >> --task build) --no-link --start-from=never --junit
      - run:
          name: Verifying Telemetry
          command: |
            TEMPLATE=$(yarn get-template --cadence << pipeline.parameters.workflow >> --task build)
            if [[ $TEMPLATE != bench/* ]]
            then
              node --loader esbuild-register/loader -r esbuild-register ./event-log-checker build $TEMPLATE
            fi
          working_directory: scripts
      - report-workflow-on-failure:
          template: $(yarn get-template --cadence << pipeline.parameters.workflow >> --task build)
      - store_test_results:
          path: test-results
      - persist_to_workspace:
          root: .
          paths:
            - sandbox/*/bench/*.json
            - sandbox/*/storybook-static
  test-runner-production:
    parameters:
      parallelism:
        type: integer
    executor:
      class: medium
      name: sb_playwright
    parallelism: << parameters.parallelism >>
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --verbose'
      - attach_workspace:
          at: .
      - run:
          name: Running Test Runner
          command: yarn task --task test-runner --template $(yarn get-template --cadence << pipeline.parameters.workflow >> --task test-runner) --no-link --start-from=never --junit
      - report-workflow-on-failure:
          template: $(yarn get-template --cadence << pipeline.parameters.workflow >> --task test-runner)
      - store_test_results:
          path: test-results
  test-runner-dev:
    parameters:
      parallelism:
        type: integer
    executor:
      class: large
      name: sb_playwright
    parallelism: << parameters.parallelism >>
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --verbose'
      - attach_workspace:
          at: .
      - run:
          name: Running Test Runner in Dev mode
          command: yarn task --task test-runner-dev --template $(yarn get-template --cadence << pipeline.parameters.workflow >> --task test-runner-dev) --no-link --start-from=never --junit
      - report-workflow-on-failure:
          template: $(yarn get-template --cadence << pipeline.parameters.workflow >> --task test-runner-dev)
      - store_test_results:
          path: test-results
  chromatic-sandboxes:
    parameters:
      parallelism:
        type: integer
    executor:
      class: medium
      name: sb_node_16_browsers
    parallelism: << parameters.parallelism >>
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Running Chromatic
          command: yarn task --task chromatic --template $(yarn get-template --cadence << pipeline.parameters.workflow >> --task chromatic) --no-link --start-from=never --junit
      - report-workflow-on-failure:
          template: $(yarn get-template --cadence << pipeline.parameters.workflow >> --task chromatic)
      - store_test_results:
          path: test-results
  e2e-production:
    parameters:
      parallelism:
        type: integer
    executor:
      class: medium
      name: sb_playwright
    parallelism: << parameters.parallelism >>
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --verbose'
      - attach_workspace:
          at: .
      - run:
          name: Running E2E Tests
          command: yarn task --task e2e-tests --template $(yarn get-template --cadence << pipeline.parameters.workflow >> --task e2e-tests) --no-link --start-from=never --junit
      - report-workflow-on-failure:
          template: $(yarn get-template --cadence << pipeline.parameters.workflow >> --task e2e-tests)
      - store_test_results:
          path: test-results
      - store_artifacts: # this is where playwright puts more complex stuff
          path: code/playwright-results/
          destination: playwright
  e2e-dev:
    parameters:
      parallelism:
        type: integer
    executor:
      class: medium
      name: sb_playwright
    parallelism: << parameters.parallelism >>
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --verbose'
      - attach_workspace:
          at: .
      - run:
          name: Running E2E Tests
          command: yarn task --task e2e-tests-dev --template $(yarn get-template --cadence << pipeline.parameters.workflow >> --task e2e-tests-dev) --no-link --start-from=never --junit
      - report-workflow-on-failure:
          template: $(yarn get-template --cadence << pipeline.parameters.workflow >> --task e2e-tests-dev)
      - store_test_results:
          path: test-results
      - store_artifacts: # this is where playwright puts more complex stuff
          path: code/playwright-results/
          destination: playwright
  bench:
    parameters:
      parallelism:
        type: integer
    executor:
      class: medium
      name: sb_playwright
    parallelism: << parameters.parallelism >>
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --verbose'
      - attach_workspace:
          at: .
      - run:
          name: Running Bench
          command: yarn task --task bench --template $(yarn get-template --cadence << pipeline.parameters.workflow >> --task bench) --no-link --start-from=never --junit
      - run:
          name: Uploading results
          command: yarn upload-bench $(yarn get-template --cadence << pipeline.parameters.workflow >> --task bench)
      - report-workflow-on-failure:
          template: $(yarn get-template --cadence << pipeline.parameters.workflow >> --task bench)

workflows:
  docs:
    when:
      equal: [docs, << pipeline.parameters.workflow >>]
    jobs:
      - pretty-docs
  normal:
    when:
      equal: [normal, << pipeline.parameters.workflow >>]
    jobs:
      - pretty-docs
      - build
      - lint:
          requires:
            - build
      - check:
          requires:
            - build
      - unit-tests:
          requires:
            - build
      - script-checks:
          requires:
            - build
      - chromatic-internal-storybooks:
          requires:
            - build
      - coverage:
          requires:
            - unit-tests
      - create-sandboxes:
          parallelism: 14
          requires:
            - build
      - build-sandboxes:
          parallelism: 14
          requires:
            - create-sandboxes
      - chromatic-sandboxes:
          parallelism: 11
          requires:
            - build-sandboxes
      - e2e-production:
          parallelism: 9
          requires:
            - build-sandboxes
      - e2e-dev:
          parallelism: 2
          requires:
            - create-sandboxes
      - test-runner-production:
          parallelism: 9
          requires:
            - build-sandboxes
      - bench:
          parallelism: 5
          requires:
            - build-sandboxes
      # TODO: reenable once we find out the source of flakyness
      # - test-runner-dev:
      #     requires:
      #       - create-sandboxes
  merged:
    when:
      equal: [merged, << pipeline.parameters.workflow >>]
    jobs:
      - pretty-docs
      - build
      - lint:
          requires:
            - build
      - check:
          requires:
            - build
      - unit-tests:
          requires:
            - build
      - script-checks:
          requires:
            - build
      - chromatic-internal-storybooks:
          requires:
            - build
      - coverage:
          requires:
            - unit-tests
      - create-sandboxes:
          parallelism: 21
          requires:
            - build
      - build-sandboxes:
          parallelism: 21
          requires:
            - create-sandboxes
      - chromatic-sandboxes:
          parallelism: 18
          requires:
            - build-sandboxes
      - e2e-production:
          parallelism: 16
          requires:
            - build-sandboxes
      - e2e-dev:
          parallelism: 2
          requires:
            - create-sandboxes
      - test-runner-production:
          parallelism: 16
          requires:
            - build-sandboxes
      - bench:
          parallelism: 5
          requires:
            - build-sandboxes
      # TODO: reenable once we find out the source of flakyness
      # - test-runner-dev:
      #     parallelism: 4
      #     requires:
      #       - create-sandboxes
  daily:
    when:
      equal: [daily, << pipeline.parameters.workflow >>]
    jobs:
      - pretty-docs
      - build
      - lint:
          requires:
            - build
      - check:
          requires:
            - build
      - unit-tests:
          requires:
            - build
      - script-checks:
          requires:
            - build
      - chromatic-internal-storybooks:
          requires:
            - build
      - create-sandboxes:
          parallelism: 36
          requires:
            - build
      # - smoke-test-sandboxes: # disabled for now
      #     requires:
      #       - create-sandboxes
      - build-sandboxes:
          parallelism: 36
          requires:
            - create-sandboxes
      - chromatic-sandboxes:
          parallelism: 33
          requires:
            - build-sandboxes
      - e2e-production:
          parallelism: 31
          requires:
            - build-sandboxes
      - e2e-dev:
          parallelism: 2
          requires:
            - create-sandboxes
      - test-runner-production:
          parallelism: 31
          requires:
            - build-sandboxes
      # TODO: reenable once we find out the source of flakyness
      # - test-runner-dev:
      #     parallelism: 4
      #     requires:
      #       - create-sandboxes
